{"version":3,"sources":["components/Wrapper/Wrapper.js","components/NavTabs/NavTabs.js","utils/API.js","components/Form/Input.js","components/Form/formBtn.js","components/Headline/Headline.js","components/pages/Search/Search.js","components/pages/Saved/Saved.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","NavTabs","Nav","bsStyle","NavLink","to","activeStyle","fontWeight","color","API","getHeadlines","axios","get","getHeadline","id","deleteHeadline","delete","saveHeadline","headlineData","post","Input","Object","assign","FormBtn","style","float","Headline","headline","snippet","dist_default","format","date","href","url","target","nytApiKey","process","require","thisYear","Date","getFullYear","Search","state","topic","startYear","endYear","articles","noResultsStyle","textAlign","handleInputChange","event","_event$target","name","value","_this","setState","defineProperty","handleFormSubmit","preventDefault","currentState","assertThisInitialized","then","response","console","log","data","docs","catch","err","handleSaveButton","datePublished","res","_this2","this","Jumbotron","Input_Input","onChange","placeholder","formBtn_FormBtn","disabled","onClick","length","map","article","thisArticle","key","_id","main","web_url","pub_date","components_Headline_Headline","Button","React","Component","Saved","loadArticles","handleRemoveButton","subtitleStyle","Header","App","components_Wrapper_Wrapper","components_Header_Header","BrowserRouter","components_NavTabs_NavTabs","Route","exact","path","render","Redirect","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc0a140e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from 'react-router-dom'\nimport \"./NavTabs.css\";\n\n\n\nconst NavTabs = () => (\n    <Nav bsStyle=\"pills\" >\n    <NavLink\n      to=\"/search\"\n      activeStyle={{\n        fontWeight: 'bold',\n        color: 'red'\n      }}\n    >Find</NavLink>\n    <NavLink\n      to=\"/saved\"\n      activeStyle={{\n        fontWeight: 'bold',\n        color: 'red'\n      }}\n    >Saved</NavLink>\n    \n  </Nav>\n);\n\n    export default NavTabs;","import axios from \"axios\";\n\nexport default {\n  // Gets all saved headlines\n  getHeadlines: function() {\n    return axios.get(\"/api/headlines\");\n  },\n  // Gets the headline with the given id\n  getHeadline: function(id) {\n    return axios.get(\"/api/headlines/\" + id);\n  },\n  // Deletes the headline with the given id\n  deleteHeadline: function(id) {\n    return axios.delete(\"/api/headlines/\" + id);\n  },\n  // Saves a headline to the database\n  saveHeadline: function(headlineData) {\n    return axios.post(\"/api/headlines\", headlineData);\n  }\n  \n};","import React from \"react\";\n\nexport const Input = props =>\n    <div className=\"form-group\">\n        <input className=\"form-control\" {...props} />\n    </div>;\n    ","import React from \"react\";\n\nexport const FormBtn = props =>\n    <button {...props} style={{ float: \"right\"}} className=\"btn btn-success\">\n        {props.children}\n    </button>;","import React from \"react\";\nimport \"./Headline.css\";\nimport Moment from \"react-moment\";\n\nconst Headline = props => (\n    <li className=\"headline\">\n        {props.children}\n        <h3>{props.headline}</h3>\n        <h4>{props.snippet}</h4>\n        <p>Published <Moment format=\"MM-DD-YYYY\">{props.date}</Moment></p>\n        <a href={props.url} target=\"_blank\">Link</a>\n    </li>\n);\n\nexport default Headline;\n","import React from \"react\";\nimport \"./Search.css\"\nimport API from \"../../../utils/API\"\nimport { Jumbotron, Button } from \"react-bootstrap\";\nimport  { Input, FormBtn } from \"../../Form\";\nimport Headline from \"../../Headline\";\n\nconst nytApiKey = process.env.REACT_APP_NYTAPIKEY;\nconst axios = require(\"axios\");\nlet thisYear = (new Date()).getFullYear();\n\nclass Search extends React.Component {\n  state = {\n    topic: \"\",\n    startYear: \"\",\n    endYear: \"\",\n    articles: []\n  };\n\n  noResultsStyle = {\n    textAlign: \"center\"\n  };\n  \n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  \n  handleFormSubmit = event => {\n    event.preventDefault();\n    let currentState = this;\n    if (this.state.topic && this.state.startYear) {\n      var url = \"https://api.nytimes.com/svc/search/v2/articlesearch.json\";\n      url += '?api-key=' + nytApiKey;\n      url += '&q=' + this.state.topic;\n      url += '&begin_date=' + (this.state.startYear || \"1900\") + \"0101\";\n      url += '&end_date=' + (this.state.endYear || thisYear) + \"1231\";\n      axios.get(url)\n      .then(function(response) {\n        console.log(response.data.response.docs);\n        currentState.setState({articles: response.data.response.docs});\n      })\n      .catch(function(err) {\n        console.log(err);\n      }); \n    }\n  }\n\n  handleSaveButton = data => {\n    API.saveHeadline({\n      id: data.id,\n      headline: data.headline,\n      snippet: data.snippet,\n      datePublished: data.date,\n      url: data.url\n    })\n      .then(res => console.log(res))\n      .catch(err => console.log(err))\n    ;\n  }\n  \n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <h2>Search</h2>\n          <form>\n            <Input\n              value={this.state.topic}\n              onChange={this.handleInputChange}\n              name=\"topic\"\n              placeholder=\"Enter topic here\"\n            />\n            <Input\n              value={this.state.startYear}\n              onChange={this.handleInputChange}\n              name=\"startYear\"\n              placeholder=\"Enter starting year of search (defaults to 1900)\"\n            />\n            <Input\n              value={this.state.endYear}\n              onChange={this.handleInputChange}\n              name=\"endYear\"\n              placeholder=\"Enter ending year of search (defaults to current year)\"\n            />\n            <FormBtn\n              disabled={!(this.state.topic)}\n              onClick={this.handleFormSubmit}\n            >\n            Search\n            </FormBtn>\n          </form>\n        </Jumbotron>\n        {this.state.articles.length ? (\n          <ul>\n            {this.state.articles.map((article) => {\n              let thisArticle = {\n                key: article._id, \n                id: article._id,\n                headline: article.headline.main,\n                url: article.web_url,\n                snippet: article.snippet,\n                date: article.pub_date\n              }\n            return (\n              <Headline {...thisArticle}>\n                <Button onClick={() => this.handleSaveButton(thisArticle)}>Save</Button>\n              </Headline>\n            )})}\n          </ul>\n        ) : (\n          <h2 style={this.noResultsStyle}>There are no search results.</h2>\n        )}         \n      </div>\n    )\n  }\n}\n\nexport default Search;","import React from \"react\";\nimport \"./Saved.css\";\nimport API from \"../../../utils/API\";\nimport Headline from \"../../Headline\";\nimport { Button } from \"react-bootstrap\";\n\nclass Saved extends React.Component {\n  state = { articles: [] };\n\n  noResultsStyle = {\n    textAlign: \"center\"\n  };\n\n  loadArticles = () => {\n    API.getHeadlines()\n      .then(res => this.setState({ articles: res.data }))\n      .catch(err => console.log(err))\n    ;\n  }\n  \n  handleRemoveButton = data => {\n    API.deleteHeadline(data._id)\n      .then(res => {\n        console.log(\"removeButton res =\", res);  \n        this.loadArticles();\n      })\n      .catch(err => console.log(err))\n    ;\n  }\n  \n  componentDidMount() {\n    this.loadArticles();\n  };\n\n  render() {\n    return (\n      <div className=\"results\">\n        {this.state.articles.length ? (\n          <ul>\n            {this.state.articles.map((article) => (\n              <Headline\n                key={article._id} {...article}\n              >\n                <Button onClick={() => this.handleRemoveButton(article)}>Remove</Button>\n              </Headline>\n            ))}\n          </ul>\n        ) : (\n          <h2 style={this.noResultsStyle}>There are no saved articles.</h2>\n        )}\n      </div>\n    )\n  }\n};\n\nexport default Saved;","import React from \"react\";\n// import \"./Header.css\";\n\nconst subtitleStyle = {\n    textAlign: \"center\"\n}\n\nconst Header = () => (\n    <div id=\"header\">\n        <h1>The New York Times Scraper in React</h1>\n        <p style={subtitleStyle}>Search for articles and save them</p>\n    </div>\n);\n\nexport default Header;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\"\nimport \"./App.css\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport NavTabs from \"./components/NavTabs/NavTabs\";\nimport Search from \"./components/pages/Search/Search\";\nimport Saved from \"./components/pages/Saved/Saved\";\nimport Header from \"./components/Header\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Header />\n        <Router>\n          <div>\n            <NavTabs />\n            <Route exact path='/' render={() => <Redirect to=\"/search\" />} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n          </div>\n        </Router>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}